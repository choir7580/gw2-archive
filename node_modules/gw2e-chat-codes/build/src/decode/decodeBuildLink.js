"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decodeBuildLink = void 0;
var static_1 = require("../static");
function decodeBuildLink(struct) {
    var profession = struct.read1Byte();
    var specialization1 = struct.read1Byte();
    var traitChoices1 = struct.readTraitSelection();
    var specialization2 = struct.read1Byte();
    var traitChoices2 = struct.readTraitSelection();
    var specialization3 = struct.read1Byte();
    var traitChoices3 = struct.readTraitSelection();
    var terrestrialHealSkill = struct.read2Bytes();
    var aquaticHealSkill = struct.read2Bytes();
    var terrestrialUtilitySkill1 = struct.read2Bytes();
    var aquaticUtilitySkill1 = struct.read2Bytes();
    var terrestrialUtilitySkill2 = struct.read2Bytes();
    var aquaticUtilitySkill2 = struct.read2Bytes();
    var terrestrialUtilitySkill3 = struct.read2Bytes();
    var aquaticUtilitySkill3 = struct.read2Bytes();
    var terrestrialEliteSkill = struct.read2Bytes();
    var aquaticEliteSkill = struct.read2Bytes();
    // Ranger
    var terrestrialPet1;
    var terrestrialPet2;
    var aquaticPet1;
    var aquaticPet2;
    if (profession === static_1.PROFESSION_FLAGS.ranger) {
        terrestrialPet1 = struct.read1Byte();
        terrestrialPet2 = struct.read1Byte();
        aquaticPet1 = struct.read1Byte();
        aquaticPet2 = struct.read1Byte();
    }
    // Revenant
    var terrestrialLegend1;
    var terrestrialLegend2;
    var aquaticLegend1;
    var aquaticLegend2;
    if (profession === static_1.PROFESSION_FLAGS.revenant) {
        terrestrialLegend1 = struct.read1Byte();
        terrestrialLegend2 = struct.read1Byte();
        aquaticLegend1 = struct.read1Byte();
        aquaticLegend2 = struct.read1Byte();
    }
    // skip inactive legends
    struct.read2Bytes();
    struct.read2Bytes();
    struct.read2Bytes();
    struct.read2Bytes();
    struct.read2Bytes();
    struct.read2Bytes();
    // check if we are at the end of the build code already,
    // selectedWeapons and selectedSkillVariants were added with SotO,
    // and old chat codes generated before SotO don't contain these yet.
    var legacyChatCode = struct.atEnd();
    var selectedWeapons = legacyChatCode ? undefined : struct.readDynamicArray(2);
    var selectedSkillVariants = legacyChatCode ? undefined : struct.readDynamicArray(4);
    return {
        type: 'build',
        profession: profession,
        specialization1: specialization1,
        traitChoices1: traitChoices1,
        specialization2: specialization2,
        traitChoices2: traitChoices2,
        specialization3: specialization3,
        traitChoices3: traitChoices3,
        terrestrialHealSkill: terrestrialHealSkill,
        terrestrialUtilitySkill1: terrestrialUtilitySkill1,
        terrestrialUtilitySkill2: terrestrialUtilitySkill2,
        terrestrialUtilitySkill3: terrestrialUtilitySkill3,
        terrestrialEliteSkill: terrestrialEliteSkill,
        aquaticHealSkill: aquaticHealSkill,
        aquaticUtilitySkill1: aquaticUtilitySkill1,
        aquaticUtilitySkill2: aquaticUtilitySkill2,
        aquaticUtilitySkill3: aquaticUtilitySkill3,
        aquaticEliteSkill: aquaticEliteSkill,
        terrestrialPet1: terrestrialPet1,
        terrestrialPet2: terrestrialPet2,
        aquaticPet1: aquaticPet1,
        aquaticPet2: aquaticPet2,
        terrestrialLegend1: terrestrialLegend1,
        terrestrialLegend2: terrestrialLegend2,
        aquaticLegend1: aquaticLegend1,
        aquaticLegend2: aquaticLegend2,
        selectedWeapons: selectedWeapons,
        selectedSkillVariants: selectedSkillVariants,
    };
}
exports.decodeBuildLink = decodeBuildLink;
//# sourceMappingURL=decodeBuildLink.js.map